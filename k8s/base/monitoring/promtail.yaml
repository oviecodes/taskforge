apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
  namespace: monitoring
data:
  promtail-config.yml: |
    server:
      http_listen_port: 9080
      grpc_listen_port: 0

    positions:
      filename: /positions/positions.yaml

    clients:
      - url: http://loki.monitoring.svc.cluster.local:3100/loki/api/v1/push
        external_labels:
          env: ${ENVIRONMENT:prod}
          cluster: kubernetes

    scrape_configs:
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - taskforge-prod
                - monitoring
        
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_phase]
            action: keep
            regex: Running
          
          - source_labels: [__meta_kubernetes_pod_namespace]
            target_label: namespace
          
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          
          - source_labels: [__meta_kubernetes_pod_container_name]
            target_label: container
          
          - source_labels: [__meta_kubernetes_pod_label_app]
            target_label: service
          
          - source_labels: [__meta_kubernetes_pod_uid, __meta_kubernetes_pod_container_name]
            target_label: __path__
            separator: /
            replacement: /var/log/pods/*$1/*.log

        pipeline_stages:
          - docker: {}
          
          - labels:
              namespace:
              pod:
              container:  
              service:

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail
  namespace: monitoring
spec:
  selector:
    matchLabels:
      name: promtail
  template:
    metadata:
      labels:
        name: promtail
    spec:
      serviceAccountName: promtail
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
      
      containers:
        - name: promtail
          image: grafana/promtail:2.9.8
          args:
            - -config.file=/etc/promtail/config.yml
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: ENVIRONMENT
              value: "prod"
          
          volumeMounts:
            - name: config
              mountPath: /etc/promtail/config.yml
              subPath: promtail-config.yml
            - name: positions
              mountPath: /positions
            - name: varlog
              mountPath: /var/log
              readOnly: true
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: varloglogs
              mountPath: /var/log/pods
              readOnly: true
          
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"  
            limits:
              memory: "128Mi"
              cpu: "200m"
          
          readinessProbe:
            httpGet:
              path: /ready
              port: 9080
            initialDelaySeconds: 10
            periodSeconds: 10
          
          livenessProbe:
            httpGet:
              path: /ready
              port: 9080
            initialDelaySeconds: 10
            periodSeconds: 10

      volumes:
        - name: config
          configMap:
            name: promtail-config
        - name: positions
          hostPath:
            path: /tmp/positions
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: varloglogs
          hostPath:
            path: /var/log/pods

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail
  namespace: monitoring

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promtail
rules:
  - apiGroups: [""]
    resources:
      - pods
      - nodes
      - nodes/proxy
      - services
      - endpoints
    verbs: ["get", "watch", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: promtail
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promtail
subjects:
  - kind: ServiceAccount
    name: promtail
    namespace: monitoring