apiVersion: v1
kind: Service
metadata:
  name: redis
  labels: { app: redis }
spec:
  type: ClusterIP
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
  selector: { app: redis }

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels: { app: redis }
  template:
    metadata:
      labels: { app: redis }
    spec:
      serviceAccountName: taskforge-sa
      containers:
        - name: redis
          image: redis:7-alpine
          ports:
            - containerPort: 6379
              name: redis
          command: ["sh","-c"]
          args:
            - |
              exec redis-server --requirepass $REDIS_PASSWORD
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: taskforge-secrets
                  key: REDIS_PASSWORD
          readinessProbe:
            exec:
              command: ["sh","-c","redis-cli -a $REDIS_PASSWORD ping | grep PONG"]
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 20
            failureThreshold: 6
          livenessProbe:
            exec:
              command: ["sh","-c","redis-cli -a $REDIS_PASSWORD ping | grep PONG"]
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 20
            failureThreshold: 5
          resources:
            requests: { cpu: "50m", memory: "128Mi" }
            limits:   { cpu: "500m", memory: "512Mi" }
          volumeMounts:
            - name: redis-data
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: redis-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
